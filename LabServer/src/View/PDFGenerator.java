package View;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.util.Date;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import java.net.URL;

import javax.swing.ImageIcon;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.codec.PngImage;



public class PDFGenerator {

	 private static String FILE = "reportes.pdf";
	    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
	            Font.BOLD);
	    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
	            Font.NORMAL, BaseColor.RED);
	    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
	            Font.BOLD);
	    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
	            Font.BOLD);
	    private static Font smallPlain = new Font(Font.FontFamily.TIMES_ROMAN, 12,
	            Font.NORMAL);
	    
	    DefaultTableModel model;
	    int rows;
	    
	    File fileToSave;
	
	public PDFGenerator() {
	
	}

	    
	    public void generarPDF(DefaultTableModel model) {

	    	FileNameExtensionFilter filter = new FileNameExtensionFilter("*.pdf", "pdf");
	    	
	    	JFileChooser fileChooser = new JFileChooser();
	    	fileChooser.setDialogTitle("Specify a file to save");   
	    	fileChooser.setFileFilter(filter);
	    	
	    	int userSelection = fileChooser.showSaveDialog(null);
	    	 
	    	if (userSelection == JFileChooser.APPROVE_OPTION) {
	    		fileToSave = fileChooser.getSelectedFile();
	    	    System.out.println("Save as file: " + fileToSave.getAbsolutePath() + ".pdf");
	    	}
	    	
	    	this.model = model;
	         try {
	            Document document = new Document();
	            document.setMargins(10, 10, 10, 10);
	            PdfWriter.getInstance(document, new FileOutputStream(fileToSave.getAbsolutePath() + ".pdf"));
	            document.open();
	            addMetaData(document);
	            addTitlePage(document);
	           // addContent(document);
	            document.add(createTable());
	            document.close();
	            
	            JOptionPane.showMessageDialog(null, "PDF Guardado: " + fileToSave.getAbsolutePath() + ".pdf", "Documento Guardado", JOptionPane.INFORMATION_MESSAGE);

	            
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	    }
	    

	    // iText allows to add metadata to the PDF which can be viewed in your Adobe
	    // Reader
	    // under File -> Properties
	    private static void addMetaData(Document document) {
	        document.addTitle("Reporte de Laboratorios");
	        document.addSubject("Reporte de Datos");
	        document.addKeywords("Aula, Computadora, Sesion, Ciber");
	        document.addAuthor("TecNM Cancun");
	        document.addCreator("Fernando Hernandez");
	    }

	    private static void addTitlePage(Document document)
	            throws DocumentException, MalformedURLException, IOException {
	    	
	   
	    	
	        Paragraph preface = new Paragraph();
	        // We add one empty line
	        preface.add(Image.getInstance("resources/pdf/header.jpg"));
	        addEmptyLine(preface, 1);
	        // Lets write a big header
	        
	        preface.add(new Paragraph("Sesiones Aulas - Laboratorio de Computo", catFont));

	      //  addEmptyLine(preface, 1);
	        // Will create: Report generated by: _name, _date
	        preface.add(new Paragraph(
	                "Reporte, generado: " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
	                smallBold));
	       
	        
	  
	        addEmptyLine(preface, 2);

	        document.add(preface);
	        // Start a new page
	     //   document.newPage();
	    }

	    private void addContent(Document document) throws DocumentException {
	        Anchor anchor = new Anchor("First Chapter", catFont);
	        anchor.setName("First Chapter");

	        // Second parameter is the number of the chapter
	        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

	        Paragraph subPara = new Paragraph("Subcategory 1", subFont);
	        Section subCatPart = catPart.addSection(subPara);
	        subCatPart.add(new Paragraph("Hello"));

	        subPara = new Paragraph("Subcategory 2", subFont);
	        subCatPart = catPart.addSection(subPara);
	        subCatPart.add(new Paragraph("Paragraph 1"));
	        subCatPart.add(new Paragraph("Paragraph 2"));
	        subCatPart.add(new Paragraph("Paragraph 3"));

	        // add a list
	        createList(subCatPart);
	        Paragraph paragraph = new Paragraph();
	        addEmptyLine(paragraph, 5);
	        subCatPart.add(paragraph);

	        // add a table
	        createTable();

	        // now add all this to the document
	        document.add(catPart);

	        // Next section
	        anchor = new Anchor("Second Chapter", catFont);
	        anchor.setName("Second Chapter");

	        // Second parameter is the number of the chapter
	        catPart = new Chapter(new Paragraph(anchor), 1);

	        subPara = new Paragraph("Subcategory", subFont);
	        subCatPart = catPart.addSection(subPara);
	        subCatPart.add(new Paragraph("This is a very important message"));

	        // now add all this to the document
	        document.add(catPart);

	    }

	    private PdfPTable createTable()
	            throws BadElementException {
	        PdfPTable table = new PdfPTable(5);

	        // t.setBorderColor(BaseColor.GRAY);
	        // t.setPadding(4);
	        // t.setSpacing(4);
	        // t.setBorderWidth(1);

	        PdfPCell c1 = new PdfPCell(new Phrase("Fecha"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);

	        c1 = new PdfPCell(new Phrase("Hora"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);

	        c1 = new PdfPCell(new Phrase("Aula"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);

	        c1 = new PdfPCell(new Phrase("Computadora"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);

	     
	        c1 = new PdfPCell(new Phrase("No. Control"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);
	        
	        table.setHeaderRows(1);
	        
	       
	        
	        
	      for(int i = 0; i < model.getRowCount(); i++) {
	    	  
	    	  table.addCell(model.getValueAt(i, 0).toString());
		        table.addCell(model.getValueAt(i, 1).toString().substring(0, 5) + " - " + model.getValueAt(i, 2).toString().substring(0,5));
		        table.addCell("Aula "+ model.getValueAt(i, 3));
		        table.addCell(model.getValueAt(i, 4).toString());
		     //   table.addCell("Fernando Alberto Hernandez Quijano");
		        table.addCell(model.getValueAt(i, 6).toString());
	      }
	        
	        return table;
	       // subCatPart.add(table);

	    }

	    private static void createList(Section subCatPart) {
	        List list = new List(true, false, 10);
	        list.add(new ListItem("First point"));
	        list.add(new ListItem("Second point"));
	        list.add(new ListItem("Third point"));
	        subCatPart.add(list);
	    }

	    private static void addEmptyLine(Paragraph paragraph, int number) {
	        for (int i = 0; i < number; i++) {
	            paragraph.add(new Paragraph(" "));
	        }
	    }
}
